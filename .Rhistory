devtools::load_all()
playShinyGame()
devtools::load_all()
playShinyGame()
playShinyGame()
x <- 1:4
x[ceil(runif(0, 4))]
x[ceiling(runif(0, 4))]
?ceiling
ceiling(runif(0, 4))
ceiling(runif(1, 0, 4))
ceiling(runif(1, 0, 4))
ceiling(runif(1, 0, 4))
ceiling(runif(1, 0, 4))
ceiling(runif(1, 0, 4))
ceiling(runif(1, 0, 4))
ceiling(runif(1, 0, 4))
ceiling(runif(1, 0, 4))
ceiling(runif(200, 0, 4))
table(ceiling(runif(2000, 0, 4)))
devtools::load_all()
playShinyGame()
devtools::load_all()
playShinyGame()
devtools::load_all()
playShinyGame()
devtools::load_all()
playShinyGame()
playShinyGame()
devtools::check()
devtools::load_all()
devtools::check()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::check()
devtools::install()
usethis::use_vignette("manual")
devtools::check()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
mastRmind::playShinyGame()
mastRmind::checkGuess()
devtools::document()
devtools::load_all()
playShinyGame()
devtools::install()
devtools::install()
library(mastRmind)
playShinyGame()
playShinyGame()
mastRmind::playShinyGame()
devtools::install()
mastRmind::playShinyGame()
roxygen2::roxygenise()
devtools::install()
library(mastRmind)
playShinyGame()
roxygen2::roxygenise()
devtools::install()
library(mastRmind)
playShinyGame()
traceback()
roxygen2::roxygenise()
devtools::install()
library(mastRmind)
playShinyGame()
devtools::install()
library(mastRmind)
playShinyGame()
traceback()
devtools::install()
library(mastRmind)
playShinyGame()
devtools::install()
library(mastRmind)
playShinyGame()
devtools::install()
library(mastRmind)
playShinyGame()
playShinyGame()
roxygen2::roxygenise()
devtools::install()
library(mastRmind)
playShinyGame()
roxygen2::roxygenise()
devtools::install()
mastRmind::playShinyGame()
mastRmind::playShinyGame()
devtools::check_rhub()
devtools::check_rhub()
# rhub::platforms()
results <- devtools::check_rhub(
platforms = c("ubuntu-gcc-devel", "ubuntu-gcc-release",
"macos-m1-bigsur-release", "macos-highsierra-release-cran"))
## check for good practice
goodpractice::gp()
devtools::check_mac_release()
devtools::check_mac_release()
rhub::check()
devtools::check_mac_release("C:\\Users\\Morten\\Desktop\\Nerd stuff\\mastRmind")
rhub::check("C:\\Users\\Morten\\Desktop\\Nerd stuff\\mastRmind")
rhub::check("C:\\Users\\Morten\\Desktop\\Nerd stuff\\mastRmind", platforms = "ubuntu-gcc-devel")
?devtools::check_rhbun
?devtools::check_rhub
rhub::platforms()
library(rhub)
library(devtools)
rhub::platforms()
detach("package:rhub", unload = TRUE)
library(rhub)
?devtools::build()
devtools::build(pkg = "C:\\Users\\Morten\\Desktop\\Nerd stuff\\mastRmind", path = "C:\Users\Morten\Desktop\Nerd stuff\mastRmind_package")
devtools::build(pkg = "C:\\Users\\Morten\\Desktop\\Nerd stuff\\mastRmind", path = "C:\\Users\\Morten\\Desktop\\Nerd stuff\\mastRmind_package")
devtools::build(pkg = "C:\\Users\\Morten\\Desktop\\Nerd stuff\\mastRmind", path = "C:\\Users\\Morten\\Desktop\\Nerd stuff\\mastRmind_package.tar.gz")
devtools::build(pkg = "C:\\Users\\Morten\\Desktop\\Nerd stuff\\mastRmind")
remove.packages("mastRmind")
